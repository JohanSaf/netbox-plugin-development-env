services:
  worker: &netbox
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        NETBOX_VERSION: latest
    command:
      - /opt/netbox/venv/bin/python
      - /opt/netbox/netbox/manage.py
      - rqworker
    env_file: env/netbox.env
    depends_on:
      netbox:
        condition: service_healthy
    volumes:
      - ./configuration/configuration.py:/opt/netbox/netbox/netbox/configuration.py
      - ./plugins/:/opt/plugins/
  netbox:
    <<: *netbox
    command:
      - /opt/netbox/venv/bin/python
      - /opt/netbox/netbox/manage.py
      - runserver
      - 0.0.0.0:8000
    ports:
      - "8000:8000"
    healthcheck:
      test: curl -f http://localhost:8000/login/ || exit 1
      start_period: 90s
      timeout: 3s
      interval: 15s
    depends_on:
      - postgres
      - valkey
  postgres:
    image: docker.io/postgres:17-alpine
    healthcheck:
      test: pg_isready -q -t 2 -d $$POSTGRES_DB -U $$POSTGRES_USER
      start_period: 20s
      timeout: 30s
      interval: 10s
      retries: 5
    env_file: env/postgres.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
  valkey:
    image: docker.io/valkey/valkey:8.0-alpine
    command:
      - /usr/local/bin/valkey-server
      - --appendonly yes
      - --requirepass netbox
    healthcheck:
      test: '[ $$(valkey-cli --pass "netbox" ping) = ''PONG'' ]'
      start_period: 5s
      timeout: 3s
      interval: 1s
      retries: 5
    volumes:
      - valkey-data:/data

volumes:
  postgres-data:
    driver: local
  valkey-data:
    driver: local
